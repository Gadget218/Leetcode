class Solution:
    def successfulPairs(self, spells: List[int], potions: List[int], success: int) -> List[int]:
        potions.sort()
        res=[]
        
        for s in spells:
            l, r =0, len(potions)-1
            index = len(potions)# Find weakest potion (further left) that works
            
            while l<=r:
                m=(l+r)//2
                if s*potions[m]>=success:
                    r=m-1
                    index=m
                else:
                    l=m+1
            res.append(len(potions)-index)
        return res