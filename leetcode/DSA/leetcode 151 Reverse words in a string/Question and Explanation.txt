Leetcode 151. Reverse Words in a String

Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: s = "  hello world  "
Output: "world hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.
 

Constraints:

1 <= s.length <= 104
s contains English letters (upper-case and lower-case), digits, and spaces ' '.
There is at least one word in s.




Solution Explanation:

1. The split() method is used on the input string s to split it into a list of words. By default, split() splits the string at whitespace characters and removes leading/trailing whitespace. The resulting list l contains all the words in the string s in the order they appeared.

2. The reverse() method is called on the list l. This reverses the order of elements in the list, effectively reversing the order of words in the string.

3. Finally, the join() method is used to concatenate the elements of the reversed list l into a single string. The join() method takes each element of the list and combines them using the provided separator, which in this case is a space " ". This creates a string where the words are joined by spaces.

4. The resulting string is returned as the output of the reverseWords method.